---
- name: Destroy Instances
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ not (lookup('env', 'MOLECULE_DEBUG') | bool or molecule_yml.provisioner.log | default(false) | bool) }}"
  tasks:
  - debug:
      var: molecule_instance_config
    ignore_errors: true

  - debug:
      var: molecule_yml
    ignore_errors: true

  - name: Get VM Facts
    vmware_guest_info:
      hostname: "{{ molecule_yml.driver.hostname }}"
      username: "{{ molecule_yml.driver.username }}"
      password: "{{ molecule_yml.driver.password }}"
      validate_certs: "{{ molecule_yml.driver.validate_certs | default(false) }}"
      datacenter: "{{ molecule_yml.driver.datacenter }}"
      folder: "{{ molecule_yml.driver.folder }}"
      name: "{{ item.name[0:10] }}"
    register: vm_result
    loop: "{{ molecule_yml.platforms }}"
    loop_control:
      label: "{{ item.name }}"
    ignore_errors: true

  - name: Destroy CI Instances
    vmware_guest:
      hostname: "{{ molecule_yml.driver.hostname }}"
      username: "{{ molecule_yml.driver.username }}"
      password: "{{ molecule_yml.driver.password }}"
      validate_certs: "{{ molecule_yml.driver.validate_certs }}"
      datacenter: "{{ molecule_yml.driver.datacenter }}"
      folder: "{{ molecule_yml.driver.folder }}"
      name: "{{ item.instance.hw_name }}"
      state: absent
      force: true
    loop: "{{ vm_result.results }}"
    loop_control:
      label: "{{ item.instance.hw_name | default('not find vm') }}"
    when:
      - "'instance' in item"