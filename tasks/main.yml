---
# tasks file for ansible-role-windows-admin-center

- name: Download Installer
  win_get_url:
    url: "{{ wac_download_url }}"
    dest: "{{ wac_download_path }}"
    force: yes
    timeout: 20

- name: Install Windows Admin Center
  win_package:
    creates_path: "{{ wac_local_install_path }}" # not required. Will check the existance of the path specified and use the result to determine whether the package is already installed.,You can use this in conjunction with C(product_id) and other C(creates_*).
    creates_service: Windows Admin Center # not required. Will check the existing of the service specified and use the result to determine whether the package is already installed.,You can use this in conjunction with C(product_id) and other C(creates_*).
    expected_return_code: 0,3010 # not required. One or more return codes from the package installation that indicates success.,Before Ansible 2.4 this was just 0 but since 2.4 this is both C(0) and C(3010).,A return code of C(3010) usually means that a reboot is required, the C(reboot_required) return value is set if the return code is C(3010).
    arguments:
    - SME_PORT={{ wac_http_port }}
    - SSL_CERTIFICATE_OPTION={{ wac_http_ssl_option }}
    - RESTART_WINRM=0
    path: "{{ wac_local_install_path }}" # not required. Location of the package to be installed or uninstalled.,This package can either be on the local file system, network share or a url.,If the path is on a network share and the current WinRM transport doesn't support credential delegation, then C(user_name) and C(user_password) must be set to access the file.,There are cases where this file will be copied locally to the server so it can access it, see the notes for more info.,If C(state=present) then this value MUST be set.,If C(state=absent) then this value does not need to be set if C(product_id) is.

- name: Restart Server
  win_reboot:
      msg: Rebooting to Complete Windows Admin Center Installation

# SME_PORT=12443 SSL_CERTIFICATE_OPTION=generate RESTART_WINRM=0" -Wait